\documentclass[12pt]{article}
\usepackage{graphicx}
\usepackage[utf8]{inputenc}
\usepackage{makecell}
\usepackage[margin=0.7in]{geometry}
\usepackage[T1]{fontenc}
\usepackage{mathptmx}

\renewcommand\theadalign{bc}
\renewcommand\theadfont{\bfseries}
\renewcommand\theadgape{\Gape[4pt]}
\renewcommand\cellgape{\Gape[4pt]}

\usepackage[
backend=biber,
style=numeric,
sorting=ynt
]{biblatex}

\addbibresource{bibliography.bib}

%opening
\title{Software design description for .... }
\author{Sandra Fares, Nour Ghoniem, Samiha Hesham, Mariam Hesham}

\begin{document}
\maketitle
\begin{table}[htp]

\begin{tabular}{|l|l|l|}
\hline
\thead{SDD Version}    & \thead{Date} & \thead{Reason for Change}  \\ \hline
1.0 & 12-April-2020   & \makecell{SDD First version’s specifications are defined}   \\ \hline
1.1 & 20-April-2020   & \makecell{Scope updated} \\ \hline
\end{tabular}
\caption{Document version history}
\end{table}

\begin{table}[htp]
\begin{tabular}{cc}
\thead{GitHub:}    & {https://github.com/SW-Project/ClinicSystem/blob/master/SDD}   
\end{tabular}
\end{table}

\section{Introduction}

\subsection{Overview}

The proposed software system will be made for a knee and orthopedic clinic. The system should be used by the clinic staff with all their roles. Also by the patients that will interact with the clinic. The system should make appointments to be easy for simple users. Also the system will manage the clinic's users, appointments, operations, notifications and reports.

\FloatBarrier
\begin{figure}[h]
\centering
\includegraphics[width=10.0cm, height=10.0cm]{./clinic block diagram.png}
\label{label1}
\end{figure}
\FloatBarrier
\newpage

\subsection{Scope}

The scope of this document is to talk about the technicality of this software system.It will be an application for Dr ahmed ghoniem clinic. This system will be designed to help the clinic to have an easier system of appointment. A full database instead of paper usage and more faster way to manage the appointments ,generating reports and adding operations if necessary. More over, the system is designed to help the doctors to know the medical history of the patients and to access their reports easily .The system must be build in incremental model and agile model.

\subsection{Purpose}
The purpose of software design document is to present detailed description of project system architecture and design. The document will explain the features of the clinic management system. Also, this document will help the project team and the customer to have a full overview about the interface and the functions of the project. The customer can review this document to be aware of the requirements that is finished.


\subsection{Intended audience}
Mainly we have five stakeholders:
\begin{itemize}
  \item Admin
  \item Receptionists
  \item Doctor
  \item Assistants
  \item Patients
  \end{itemize}

\subsection{ Abbreviations}
\begin{itemize}

\item SMS = Short Message Service
\item ER=Entity Relationship diagram
\item Tb=table
\item Rtb=relation table
\item API=application program interface

\end{itemize}
 
\section{Project Overview}
The outcome of this project is a Clinic software product that is used to assist patients in booking appointments effortlessly. This software collects data about the patients and their medical history, which helps the Doctor to get a better view of the Patients' case and view their medical history easily any time necessary. Therefore, offering accurate Diagnosis in less time and with less confusion. Moreover, this product shall offer better communication with the Dr and his Patients. The Doctor can write reports for his patients and keep them updated. On the other hand, Patients also have the ability to reach out to the Doctor's assistant using a chatting system, learning more about their case and the operations scheduled, if any.
\subsection{Project Scope}
The project's target is to help Patients book appointments and assist the Dr to view his patients' data effortlessly. This target shall be reached using certain methods. These methods include offering the patient an easy way to fill his information and book his appointments in any time suitable for him without reaching out to receptionists. On the other hand, the receptionists shall be automatically notified when a patient books an appointment. Moreover the patients' data, including their medical history, shall be saved for the Dr to view easily any time. API tools shall also be used to offer a chatting system for the Patients and the Doctor's assistant to communicate. By successfully building these methods and making them function well, there shall be no more confusion with retrieving Patients' data and booking appointments. The patients and the Dr shall be updated with any new progress shortly and effortlessly.
\subsection{Goals and objectives}
\begin{enumerate}
\item  The Patients shall be able to book appointments effortlessly.


\item Receptionists and the Doctor shall be able to view appointments.


\item The Patients shall be able to contact the Doctor's assistant through a chatting system.


\item The Doctor shall be able to view Patients' medical history.


\item The Doctor shall be able to add Reports concerning his Patients' cases.


\item The Doctor shall be able to add an operation.


\item The Doctor's assistant shall be able to schedule operations and contact patients.

\item The admin shall be able to add staff, view appointments and manage everything concerning the system.

\item The Patients shall be able to register into the system.

\item The Patients and The Staff shall be able to login into the system, if verified, and shall be forwarded to their main pages.


\end{enumerate}

\subsection {Project Timeline}
The overall time frame and major phases (milestones) along with deliverable for each phase.

\section{ Context viewpoint}
Provide a description of Systems services and users. 
You can provide use case diagram and context diagram here.

\section{System Architecture Design} \label{s-arch}

\begin{figure}[tbh]
\centering
\includegraphics[width=0.7\linewidth]{./image}
\caption{Architectural Design}
\label{archdsgn}
\end{figure}

\subsection{Logical viewpoint} \label{ss-logical}
Write a  high level overview  of how responsibilities of the system were partitioned and then assigned to subsystems. Identify each high level subsystem and  the  roles or responsibilities assigned to it. 
Describe  how  the subsystems collaborate with each other in order to achieve the desired functionality. Don t go into too much detail about the individual subsystems. The main purpose is to gain a general understanding  of how  and why the system was decomposed, and  how the  individual parts work together. Provide a diagram showing the major subsystems and data repositories and their interconnections. Describe the diagram if required.

The purpose of the Logical viewpoint is to elaborate existing and designed types and their implementations as classes and interfaces with their structural static relationships. 
provide detailed description of your used architecture here such as MVC, layered architecture. use figures such as in figure \ref{archdsgn}etc.
\subsubsection{Design Rationale}
Discuss the rationale for selecting the architecture described in section \ref{ss-logical} including critical issues
and  trade/offs that were  considered. You  may discuss other  architectures that were 
considered, provided that you explain why you didn't choose them.
\subsection{Patterns use viewpoint}
\subsubsection{MVC design pattern}
Clinic management system is build on MVC form. MVC is the separation of Model, View and Controller classes. Main advantage of MVC architecture is differentiating the layers of a project in Model,View and Controller for the Re-usability of code and better maintenance. MVC is applied in most of  the tables in out project.
  Examples:
  \begin{itemize}
      \item Appointment
      \item Reports
      \item patients system
      \item Notification system
      
  \end{itemize}
\subsubsection{Singleton Design Pattern}
Singleton design pattern is used to allow access to one and only one instance of a particular class. It provide global access the that single instance from anywhere. In our project we used singleton in connection to the database class which is the database helper class, so a single connection is made to the database by each user.

\subsubsection{Observer Design Pattern}
The Observer Design Pattern is used in the application for the notifications feature due to that we notify in different formats emails and SMS.

\subsubsection{Decorator Design Pattern}
The Decorator Design Pattern allow us to attach additional responsibilities to an object dynamically. Decorators provide a flexible alternative to sub-classing for extending functionality. We will use decorative in preparing the invoice outcome. As invoice depends on the patient's chooses, invoice will be out in different formats.

\subsubsection{Facade Design Pattern}
Facade pattern creates an easy use interface by hiding multiple interfaces in one class. we will use facade on all APIs used to hide the complexity of the code.


\subsection{Composition viewpoint}
Provide a decomposition of the subsystems in the architectural design. Supplement with text 
as needed. 
provide subsystem model, package diagrams, generalization hierarchy diagram(s) (if any), aggregation hierarchy diagram(s) (if any).

\subsection{Structure viewpoint}\label{Structure}
The Structure viewpoint is used to document the internal organization of the system.
Provide here a detailed UML class diagram of the system.

\subsection{Algorithm viewpoint}
In this section, provide closer look at what each component does in a more systematic way. If you gave a functional description in section \ref{Structure}, provide a summary of your algorithm for each function listed in\ref{Structure} in procedural description language (PDL) or pseudo-code. If you gave an OO description, summarize each object member function for all the objects listed in \ref{Structure}.\\
Decision tables and flowcharts; program design languages (PDL), “pseudo-code,” and (actual) programming languages may also be used. 

\subsection{Interaction viewpoint}
Provides description of Object communication, messaging using UML sequence diagrams


\subsection{Interface viewpoint}
The Interface viewpoint provides programmers, and testers the means to know how
to correctly use the provided services. 
This viewpoint consists of a set of interface specifications for each entity. \\
NOTE—User interfaces are addressed separately. 

\section{Data Design}
\subsection{Data Description}
Explain how the information domain of your system is transformed into data structures. Describe how the major data or system entities are stored, processed and organized. \\
You may consider the answer for the following questions:\\
What is the original format of the data (paper based, excel files, old system database)?\\
Identify the method used to capture the data into your system(web page forms, import documents etc..)?\\
How large is the database expected to be (in numbers of rows and columns for the main entities)?\\
What is the expected number of users/customers for the system?\\
How is your entity keys(ids) constructed (is there a specific code or format for ID definition)?
Does your data contain date/time, if yes which format are they presented in?
You may provide data models such as Entity Relationship Diagram (ERD) in this section.

\subsection{Database design description}
Describe any databases (provide database schema diagram) and/or description of other data storage items.

\section{Human Interface Design}

\subsection {User Interface}
Describe the functionality of the system from the user s perspective. Explain  how the user 
will be  able  to use  your system to complete  all the  expected  features and  the  feedback 
information that will be displayed for the user.

\subsection {Screen Images}
Display screenshots showing the interface from the user s perspective. These can be  hand drawn
or you can use an automated drawing tool. Just make them as accurate as possible.
(Graph paper works well .)



\section{Requirements Matrix}
Provide a cross reference that traces components and data structures to the requirements in your SRS document.
Use  a  tabular  format to show  which system  components satisfy each of the  functional 
requirements from the SRS. Refer to the functional requirements by the numbers/codes that you gave them in the SRS.


\section{APPENDICES}
This section is optional.
Appendices may be included, either directly or by reference, to provide supporting details that could 
aid in the understanding of the Software Design Document.

\section {References}
\printbibliography

\end{document}
