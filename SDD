\documentclass[12pt]{article}
\usepackage{graphicx}
\usepackage[utf8]{inputenc}
\usepackage{makecell}
\usepackage[margin=0.7in]{geometry}
\usepackage[T1]{fontenc}
\usepackage{mathptmx}

\renewcommand\theadalign{bc}
\renewcommand\theadfont{\bfseries}
\renewcommand\theadgape{\Gape[4pt]}
\renewcommand\cellgape{\Gape[4pt]}

\usepackage[
backend=biber,
style=numeric,
sorting=ynt
]{biblatex}

\addbibresource{bibliography.bib}

%opening
\title{Software design document }
\author{Sandra Fares, Nour Ghoniem, Samiha Hesham, Mariam Hesham}

\begin{document}
\maketitle
\begin{table}[htp]

\begin{tabular}{|l|l|l|}
\hline
\thead{SDD Version}    & \thead{Date} & \thead{Reason for Change}  \\ \hline
1.0 & 12-April-2020   & \makecell{SDD First version’s specifications are defined}   \\ \hline
1.1 & 20-April-2020   & \makecell{Scope updated} \\ \hline
\end{tabular}
\caption{Document version history}
\end{table}

\begin{table}[htp]
\begin{tabular}{cc}
\thead{GitHub:}    & {https://github.com/SW-Project/ClinicSystem/blob/master/SDD}   
\end{tabular}
\end{table}

\section{Introduction}

\subsection{Overview}

The proposed software system will be made for a knee and orthopedic clinic. The system should be used by the clinic staff with all their roles. Also by the patients that will interact with the clinic. The system should make appointments to be easy for simple users. Also the system will manage the clinic's users, appointments, operations, notifications and reports.

\FloatBarrier
\begin{figure}[h]
\centering
\includegraphics[width=10.0cm, height=10.0cm]{./clinic block diagram.png}
\label{label1}
\end{figure}
\FloatBarrier
\newpage

\subsection{Scope}

The scope of this document is to talk about the technicality of this software system.It will be an application for Dr ahmed ghoniem clinic. This system will be designed to help the clinic to have an easier system of appointment. A full database instead of paper usage and more faster way to manage the appointments ,generating reports and adding operations if necessary. More over, the system is designed to help the doctors to know the medical history of the patients and to access their reports easily .The system must be build in incremental model and agile model.

\subsection{Purpose}
The purpose of software design document is to present detailed description of project system architecture and design. The document will explain the features of the clinic management system. Also, this document will help the project team and the customer to have a full overview about the interface and the functions of the project. The customer can review this document to be aware of the requirements that is finished.


\subsection{Intended audience}
Mainly we have five stakeholders:
\begin{itemize}
  \item Admin
  \item Receptionists
  \item Doctor
  \item Assistants
  \item Patients
  \end{itemize}

\subsection{ Abbreviations}
\begin{itemize}

\item SMS = Short Message Service
\item ER=Entity Relationship diagram
\item Tb=table
\item Rtb=relation table
\item API=application program interface

\end{itemize}
 
\section{Project Overview}
The outcome of this project is a Clinic software product that is used to assist patients in booking appointments effortlessly. This software collects data about the patients and their medical history, which helps the Doctor to get a better view of the Patients' case and view their medical history easily any time necessary. Therefore, offering accurate Diagnosis in less time and with less confusion. Moreover, this product shall offer better communication with the Dr and his Patients. The Doctor can write reports for his patients and keep them updated. On the other hand, Patients also have the ability to reach out to the Doctor's assistant using a chatting system, learning more about their case and the operations scheduled, if any.

\subsection{Project Scope}
The project's target is to help Patients book appointments and assist the Dr to view his patients' data effortlessly. This target shall be reached using certain methods. These methods include offering the patient an easy way to fill his information and book his appointments in any time suitable for him without reaching out to receptionists. On the other hand, the receptionists shall be automatically notified when a patient books an appointment. Moreover the patients' data, including their medical history, shall be saved for the Dr to view easily any time. API tools shall also be used to offer a chatting system for the Patients and the Doctor's assistant to communicate. By successfully building these methods and making them function well, there shall be no more confusion with retrieving Patients' data and booking appointments. The patients and the Dr shall be updated with any new progress shortly and effortlessly.

\subsection{Goals and objectives}
\begin{enumerate}
\item  The Patients shall be able to book appointments effortlessly.


\item Receptionists and the Doctor shall be able to view appointments.


\item The Patients shall be able to contact the Doctor's assistant through a chatting system.


\item The Doctor shall be able to view Patients' medical history.


\item The Doctor shall be able to add Reports concerning his Patients' cases.


\item The Doctor shall be able to add an operation.


\item The Doctor's assistant shall be able to schedule operations and contact patients.

\item The admin shall be able to add staff, view appointments and manage everything concerning the system.

\item The Patients shall be able to register into the system.

\item The Patients and The Staff shall be able to login into the system, if verified, and shall be forwarded to their main pages.


\end{enumerate}



\section{ Context viewpoint}
\subsection{Context Diagram}
\FloatBarrier
\begin{figure}[h]
\centering
\includegraphics[width=10.0cm, height=10.0cm]{./context diagram.png}
\label{label1}
\end{figure}
\FloatBarrier
\newpage
\subsection{Use case scenario}
\FloatBarrier
\begin{figure}[h]
\centering
\includegraphics[width=15.0cm, height=10.0cm]{./Use case diagram.png}
\label{label1}
\end{figure}
\FloatBarrier
\newpage

\section{System Architecture Design}
\begin{figure}[h]
    \centering
    \includegraphics[width=15cm]{./Architecture Diagram.jpeg}
    \caption{Software Architecture Diagram}
    \label{fig:galaxy}
\end{figure}
\label{s-arch}



\subsection{Logical viewpoint} \label{ss-logical}

Our system is divided into five models.
\begin{figure}[h]
    \centering
    \includegraphics[width=12cm]{./Logical diagram (1).jpeg}
    \caption{Logical Architecture Diagram}
    \label{fig:galaxy}
\end{figure}
\begin{itemize}
  \item Admin: The Admin is the owner of the system. He has the ability to add Staff and view their data, in addition to viewing everything in the system.
  \item Receptionists: They are mainly responsible for viewing the appointments.
  \item Doctor: The system gives the Dr. a lot of privileges, such as viewing appointments, adding reports, viewing Patients' medical history and view operations.
  \item Assistants: The assistant's main job is to manage operations and contacting Patients through a chatting system.
  \item Patients: The system gives a lot of privileges to Patients too. Some of the functionalities that the system provides to Patients include, booking appointments, viewing reports,and contacting the Doctor's assistant.
  
  
\end{itemize}
Our system is designed using the MVC architecture, which consists of three partitions: Model (Data access layer), View (Presentation Layer), and Controller (Controlling Layer).
\begin{enumerate}
\item Model Layer: Contains only the pure application data, it contains no logic describing how to present the data to a user. By means, it contains the functions which interact directly with the database.
Example:
\begin{itemize}
\item CRUD: all the functions that are implemented for our users and objects (Create, Read, Update, Delete) deal with the model layer as our functions interact directly with the database.
\end{itemize}
\item View Layer: presents the model’s data to the user. The view knows how to access the model’s data, but it does not know what this data means or what the user can do to manipulate it. Simply, the view layer is concerned with what the users see on their screens.
Example:
\begin{itemize}
\item Doctor's dashboard: it is the page that appears for the Doctor when he logs into the system.
\end{itemize}
\item Controller Layer: It is a mid layer. It exists between the view and the model. It listens to events triggered by the view and executes the appropriate reaction to these events. In most cases, the reaction is to call a method on the model.
Example:
\begin{itemize}
\item Login: by getting the data entered by the user and checking into the database if the user exists or if the data are valid.
\end{itemize}

 

\end{enumerate}
\subsubsection{Design Rationale}
MVC is a quite useful architecture to use for our system, as the system is huge. It will help us develop our system easily and in a simple way. Moreover, it helps us update our system easily if needed, making our system more flexible and reliable. It also makes it easier for multiple developers to work together, which is a great advantage in our case.


\subsection{Patterns use viewpoint}
\subsubsection{MVC design pattern}
Clinic management system is build on MVC form. MVC is the separation of Model, View and Controller classes. Main advantage of MVC architecture is differentiating the layers of a project in Model,View and Controller for the Re-usability of code and better maintenance. MVC is applied in most of  the tables in out project.
  Examples:
  \begin{itemize}
      \item Appointment
      \item Reports
      \item patients system
      \item Notification system
      
  \end{itemize}
\subsubsection{Singleton Design Pattern}
Singleton design pattern is used to allow access to one and only one instance of a particular class. It provide global access the that single instance from anywhere. In our project we used singleton in connection to the database class which is the database helper class, so a single connection is made to the database by each user.

\subsubsection{Observer Design Pattern}
The Observer Design Pattern is used in the application for the notifications feature due to that we notify in different formats emails and SMS.



\subsubsection{Facade Design Pattern}
Facade pattern creates an easy use interface by hiding multiple interfaces in one class. we will use facade on all APIs used to hide the complexity of the code.

\subsection{Composition viewpoint}
to be continued

\subsection{Structure viewpoint}\label{Structure}
\subsubsection{Class diagram}
\begin{itemize}
    \item  CRUD interface: This will contain the functions which draws the Forms and tables to contain the data of the users for viewing,searching,inserting, deleting and editing.
    \item Login: In this part the files are meant to make the validations and verification on all the data inserted for protection and insurance during login.
\end{itemize}
\FloatBarrier
\begin{figure}[h]
\centering
\includegraphics[width=15.5cm, height=11.5cm]{./clinic system-12.png}
\label{label1}
\end{figure}
\FloatBarrier
\newpage
\subsubsection{process architecture}
\FloatBarrier
\begin{figure}[h]
\centering
\includegraphics[width=15.5cm, height=11.5cm]{./PROCESS ARCHITECTURE.png}
\label{label1}
\end{figure}
\FloatBarrier
\newpage


\subsection{Interaction viewpoint}
\subsubsection{Patient}
\begin{figure}[ht]
    \centering
    \includegraphics[width=17cm]{./Patient.jpeg}
    \caption{Patient's Sequence Diagram}
    \label{fig:galaxy}
\end{figure}
\begin{itemize}
The Patients' sequence diagram shows the sequence of events that happen and appear to the Patient, once he logs into the system. If the Patient managed to successfully log into the system, the Patient's main page pops up, which has many options for the patient. If the Patient chose to book an appointment, the appointment page appears to him, so he can start booking. Once he's done booking, an invoice page appears to him. The Patient can also view Reports written to him by the Doctor from his main page. Once he chooses this option, a page appears with all his Reports. Moreover, the Patient can contact the assistant through the Services page, and be informed when the assistant replies to his message.
\end{itemize}
\newpage
\begin{figure}[ht]
    \centering
    \includegraphics[width=17cm]{./Doctor (2).jpeg}
    \caption{Doctor's Sequence Diagram}
    \label{fig:galaxy}
\end{figure}
\begin{itemize}
The Doctor's sequence diagram shows the sequence of events that happen and appear to The Doctor, once he logs into the system successfully. The first things that appears to the Doctor is that Doctor's dashboard that, like the Patients', has various alternative pages for the Doctor to choose from. If the Doctor wished to view appointments, the appointments page, which has all the appointment's for the day, will pop up to him. The Doctor can also open the Reports' page, which will allow him to add a Report for any Patient he chooses. Moreover, he can view Patients' histories and book operations, leading him to the pages required for each of them.
\end{itemize}
\newpage
\begin{figure}[ht]
    \centering
    \includegraphics[width=19cm]{./Assistant final.jpeg}
    \caption{Assistant's Sequence Diagram}
    \label{fig:galaxy}
\end{figure}
\begin{itemize}
\item The Assistant's sequence diagram shows the sequence of events that happen and appear to the Assistant, once he logs into the system successfully. The first things that appears to the Assistant is the Assistant's dashboard that, gives him the right to view the appointments, the histories of the Patients', and the Reports written by the Doctor. The Assistant can also chat with Patients through the chatting system and reply to their messages. Moreover, he can book operations for the Patients. For each of these options, appears a page for the Assistant work on.
\end{itemize}
\newpage
\begin{figure}[ht]
    \centering
    \includegraphics[width=19cm]{./Admin.jpeg}
    \caption{Admin's Sequence Diagram}
    \label{fig:galaxy}
\end{figure}
\begin{itemize}
\item The Admin's sequence diagram shows the sequence of events that happen and appear to the Admin, once he logs into the system successfully. The Admin's dashboard appears once he logs in. The Admin has the privilege of updating everything in the system including, Appointments, Patients' histories, Reports,and Operations. Moreover, he has the ability to add Staff and delete Patients.

\end{itemize}
\newpage
\begin{figure}[ht]
    \centering
    \includegraphics[width=15cm]{./Receptionists.jpeg}
    \caption{Receptionists' Sequence Diagram}
    \label{fig:galaxy}
\end{figure}
\begin{itemize}
\item The Receptionists' sequence diagram shows the sequence of events that happen and appear to the Receptionists, once he logs into the system successfully. The Receptionist's dashboard pops up, which has less options than the rest. The Receptionists' can only view appointments and view invoices, so they can print them to the Patients.
\end{itemize}



\section{Data Design}
\subsection{Data Dictionary}

\begin{itemize}
  \item Rtb option user type: the relation between the options the user types which is mainly the staff as Admin,doctor,assistant,receptionist.
  \item Rtb  Payment : the table that contains the relations between the Payment Method ID and the description, where it saves the options ID required to be shown when selecting any kind of payment according to the appointment type.
  \item Rtb appointments:the relation between the clinic ID from class clinics that is chosen and the patient's specific time slot that is booked.
  \item Rtb patient's history: the relation between the patients and the doctor as the doctor is allowed to view every patients history to precisely wrote the report needed for this specific case.
  
  \item Tb clinics :stores the description and the id of each clinic branch.
  \item Tb option payment values: the table that carries the values that each user has paid by a certain payment method.
  \item Tb injections:saves the description and the price of the injection the doctor recommended to the patient.
  \item Tb appointments: the appointments that happened and its amount and category each appointment also stores the day and the patient's id.
  \item Tb day limit: that table that stores the day of appointments and the maximum limit of appointments for that specific day because it is dynamic and depends on the type of appointment that is reserved. 
  \item Tb  staff: the email and hashed password for each user signed up on the system and his/her own profile details.
  \item tb patients: storing the data of the patients while registering into the system.
  \item 
  \item Rtb operations: the table that contains the relation between the patient and the assistant that the assistant has the ability to add operations if needed to this specific patient.
  \item Rtb operations type:the table that contains the relation between reports and operations that knows from tb reports if the doctor added an operation to this patient or not.
  \item Rtb reports: the table that contains relation between the patient and the doctor as the doctor has the ability to generate a report to each patient with specific description according to his/her illness.
  \item Tb reports: stores the date the report generated at, comments and the patient's ID.
  \item Tb message: the email subject and content that system can send to clients.
  \item Tb message type: determine either the message is via mail or SMS. 
  \item Tb user type: all the staff types on the system and their IDs.
  

\end{itemize}
\subsection{Database design description}
MySQL database to communicate with the database that is installed locally on the server.

\subsubsection{ER diagram }
\FloatBarrier
\begin{figure}[h]
\centering
\includegraphics[width=10.5cm, height=12.5cm]{./ER CLINIC System.png}
\label{label1}
\end{figure}
\FloatBarrier
\newpage
\subsubsection{Database schema}
\FloatBarrier
\begin{figure}[h]
\centering
\includegraphics[width=15cm, height=15.5cm]{./database clinic system.jpeg}
\label{label1}
\end{figure}
\FloatBarrier
\newpage

\section{Human Interface Design}

\subsection {User Interface}

The proposed project allows the user to create an account. The system will allow the user to sign in with his account. The patient will choose which clinic branch he will book an appointment at.The system allows the clinic to have  accounts for every patient to be easier to contact with them.Also from the staff' side it will help the doctor to know the medical history and generate report to each patient to follow up with them.

\subsection {Screen Images}

\FloatBarrier
\begin{figure}[h]
\centering
\includegraphics[width=15.0cm, height=11.0cm]{./Home.png}
\caption{Main Page of website the patient use it}
\label{label1}
\end{figure}
\newpage


\begin{figure}[h]
\centering
\includegraphics[width=15.0cm, height=11.0cm]{./regpatient2.jpeg}
\caption{patient registration form}
\label{label1}
\end{figure}
\newpage
\begin{figure}[h]
\centering
\includegraphics[width=15.0cm, height=11.0cm]{./regpatient.jpeg}
\caption{patient filling registration form}
\label{label1}
\end{figure}
\newpage
\begin{figure}[h]
\centering
\includegraphics[width=15.0cm, height=11.0cm]{./patientlogin.jpeg}
\caption{patient logging in}
\label{label1}
\end{figure}
\newpage
\begin{figure}[h]
\centering
\includegraphics[width=15.0cm, height=11.0cm]{./patientlogin.jpeg}
\caption{patient login with alert}
\label{label1}
\end{figure}
\newpage
\begin{figure}[h]
\centering
\includegraphics[width=15.0cm, height=11.0cm]{./2.jpeg}
\caption{staff's login}
\label{label1}
\end{figure}
\newpage
\begin{figure}[h]
\centering
\includegraphics[width=15.0cm, height=11.0cm]{./patient3.jpeg}
\caption{patient's dashboard }
\label{label1}
\end{figure}
\newpage


\vfill
 \begin{figure}[h]
 
 \begin{minipage}{.5\textwidth}
  \includegraphics[width=15.0cm, height=10.0cm]{./reg1.png}
  \caption{Patient's page}
 \end{minipage}
  \begin{minipage}{.5\textwidth}
  \includegraphics[width=15.0cm, height=10.0cm]{./reg2.png}
  \caption{Staff's page}
 \end{minipage}
\end{figure}

\begin{figure}[h]
\centering
\includegraphics[width=15.0cm, height=12.0cm]{./Dr.png}
\caption{Doctor's dashboard}
\label{label1}
\end{figure}


\begin{figure}[h]
\centering
\includegraphics[width=15.5cm, height=10.0cm]{./b1.jpeg}
\caption{Booking Page}
\label{label1}
\end{figure}

\newpage


\begin{figure}[h]
\centering
\includegraphics[width=15.5cm, height=10.0cm]{./time.jpeg}
\caption{Appointment Page}
\label{label1}
\end{figure}


\newpage


\begin{figure}[h]
\centering
\includegraphics[width=15.5cm, height=10.0cm]{./admin.png}
\caption{Admin Page}
\label{label1}
\end{figure}

\newpage

\FloatBarrier

\section{Requirements Matrix}



\begin{figure}[h]
\centering
\includegraphics[width=15.5cm, height=10.0cm]{./section7.jpeg}
\caption{matricies}
\label{label1}
\end{figure}


\section {References}
\bibliographystyle{IEEEtranS}
\begin{thebibliography}{10}
\bibitem{[1]}
[Online] Ros, Fabian, "Hospital Management System using PHP with Source Code", 01 2018, Source Code and Projects, Available at: https://code-projects.org/hospital-management-system-using-php-source-code/, Accessed:03/05/2020

\bibitem{[2]}
[Online] Creately Templates, "Online Clinic Reservation System - Context Diagram ( Data Flow Diagrams(YC))", Creately, Available at: https://creately.com/diagram/example/intvotax1/OnlineClinicReservationSystem-ContextDiagram, Accessed:10/05/2020
\end{thebibliography}


\end{document}
